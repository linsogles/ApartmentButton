/*
 * Linda Oglesbee & Nick Dea
 * Febuary 26 2018
 * Program 3 
 * This class displays keypad that interacts 
 * with user to allow entry into apartment
 * based on correct pin & apartment number
 */
package program3;

import java.awt.Insets;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.TilePane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class Program3 extends Application {


    // Buttons for the squares in the keypad
    public Button button1, button2, button3,
            button4, button5, button6,
            button7, button8, button9,
            button10, button11,button12;;
    public String text = "*";
     

    public static void main(String[] args) {
        // Method launch is declared in the Application class.
        // it calls method start, below
        launch(args);
    }  // end main

    public void start(Stage stage) {
        // Set up the screen layout.
       
        VBox root = new VBox(8); 

        root.setPrefWidth(500);  // 500 pixels wide for now
              
        // Put the top row entries in a TilePane
        TilePane tilePane = new TilePane();
        tilePane.setStyle(" -fx-padding: 3 30 3 30;"); //3 30 3 30
        tilePane.setHgap(10);  // horizontal space between entries
        
       

        // Add the tilePane object to the root container
        root.getChildren().add(tilePane);
        
       
                    
      
        TextField KDisplay = new TextField ();
        tilePane.getChildren().add(KDisplay);
        
       // tilePane.set
        //HBox hbox = new HBox(KDisplay);
        KDisplay.setEditable(false); //user can't enter directly 


       //Gridpane instead of Scene
       //Scene scene = new Scene(hbox, 200, 100);
       // stage.setScene(scene);
       //stage.show();
       //HBox hb = new HBox();
       //hb.getChildren().addAll(textField);
       //hb.setSpacing(10);
        

        // Set up the 12 buttons for the keypad.
        button1 = new Button("1");
        button1.setPrefSize(150, 150);
        button1.setId("1");
        button1.setOnAction(new SimpleEventHandler());
        button1.pressedProperty().addListener((newValue) -> KDisplay.setText(text));
       
        
        //btn.wrapTextProperty().setValue(true);
       // or btn.setWrapText(true);
      // button1.setText("a b c");
     // VBox vb1 = new VBox();
      //Label label1 = new Label("a b c ");
      //Label label11 = new Label("1 ");
     // vb1.getChildren().add(button1);
      //button1.setText("a -fx-font: 2 arial;");

        button2 = new Button("2");
        button2.setPrefSize(150, 150);
        button2.setId("2");
        button2.setOnAction(new SimpleEventHandler());
        button2.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));
       
        button3 = new Button("3");
        button3.setPrefSize(150, 150);
        button3.setId("3");
        button3.setOnAction(new SimpleEventHandler());
        button3.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));

        // buttons for the second row of the game
        button4 = new Button("4");
        button4.setPrefSize(150, 150);
        button4.setId("4");
        button4.setOnAction(new SimpleEventHandler());
        button4.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));

        button5 = new Button("5");
        button5.setPrefSize(150, 150);
        button5.setId("5");
        button5.setOnAction(new SimpleEventHandler());
        button5.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));

        button6 = new Button("6");
        button6.setPrefSize(150, 150);
        button6.setId("6");
        button6.setOnAction(new SimpleEventHandler());
        button6.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));

        // buttons for the third row of the game
        button7 = new Button("7");
        button7.setPrefSize(150, 150);
        button7.setId("7");
        button7.setOnAction(new SimpleEventHandler());
        button7.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));

        button8 = new Button("8");
        button8.setPrefSize(150, 150);
        button8.setId("8");
        button8.setOnAction(new SimpleEventHandler());
        button8.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));

        button9 = new Button("9");
        button9.setPrefSize(150, 150);
        button9.setId("9");
        button9.setOnAction(new SimpleEventHandler());
        button9.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));
        
        button10 = new Button("*");
        button10.setPrefSize(150, 150);
        button10.setId("10");
        button10.setOnAction(new SimpleEventHandler());
        button10.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));

        
        button11 = new Button("0");
        button11.setPrefSize(150, 150);
        button11.setId("11");
        button11.setOnAction(new SimpleEventHandler());
        button11.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));

        
        button12 = new Button("#");
        button12.setPrefSize(150, 150);
        button12.setId("12");
        button12.setOnAction(new SimpleEventHandler());
        button12.pressedProperty().addListener((newValue) -> KDisplay.setText(text.concat("*")));


        // set up the displayable image
        GridPane gridPane = new GridPane();
        gridPane.setPrefSize(500, 500); // default size 500 500
        gridPane.setHgap(10);
        gridPane.setVgap(10);

        String style = "";  // style for the overall grid
        style += " -fx-background-insets: 0,1,2; -fx-background-radius: 3,2,1; ";
        style += " -fx-padding: 90 30 3 30; -fx-text-fill: black; -fx-font: 62 arial;"; //SPACE FOR KEYBOARD
        gridPane.setStyle(style);

        // Add the buttons to the grid.
        // Layout is column first, then row
       // tilePane.add(KDisplay);
        gridPane.add(button1, 0, 0);
        gridPane.add(button2, 1, 0);
        gridPane.add(button3, 2, 0);
        gridPane.add(button4, 0, 1);
        gridPane.add(button5, 1, 1);
        gridPane.add(button6, 2, 1);
        gridPane.add(button7, 0, 2);
        gridPane.add(button8, 1, 2);
        gridPane.add(button9, 2, 2);
        gridPane.add(button10, 0, 3);
        gridPane.add(button11, 1, 3);
        gridPane.add(button12, 2, 3);

        // Add the grid to the root container
        root.getChildren().add(gridPane);

        // Create a scene, add it to the stage,
        // title it, then make it visible
        stage.setScene(new Scene(root));    //if i comment this out it just shows textfield
        stage.setTitle("Apartment Keypad");
        stage.show();

    }  // end method start   
      
        // Handler class
       class SimpleEventHandler implements EventHandler<ActionEvent> {
       public void handle(ActionEvent event) {
           
           //if star key enteted, text erased
           if(button10.isPressed())
           {
              text = null; 
           }
           
           }
    }
    
}
